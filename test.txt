from tkinter import messagebox
import customtkinter as ctk
from PIL import Image
import os

# Import des pages spécifiques
from shared import navigate_to_page
from injectionsql import show_sql_page
from attaquexss import show_xss_page
from access_control import show_access_control_page
from general_scanner import show_nmap_page
from parametres import show_settings_page
from crypto_tests import show_crypto_tests_page
from bruteforce import show_brute_force_page
from apropos import show_about_page


def quit_application():
    """Ferme l'application proprement."""
    root.quit()


def show_default_page(content_frame):
    """Affiche une page par défaut avec des informations interactives."""
    for widget in content_frame.winfo_children():
        widget.destroy()

    welcome_label = ctk.CTkLabel(
        content_frame,
        text="Bienvenue dans KHRAL",
        font=("Helvetica", 24, "bold"),
        text_color="white",
    )
    welcome_label.pack(pady=20)

    description_label = ctk.CTkLabel(
        content_frame,
        text="Choisissez une fonctionnalité dans le menu à gauche pour commencer.\n\n"
             "Explorez les outils avancés pour la sécurité informatique :\n"
             " • Scanner les vulnérabilités\n"
             " • Tester les injections SQL\n"
             " • Analyser les failles XSS\n\n",
        font=("Helvetica", 16),
        text_color="lightgray",
        justify="left"
    )
    description_label.pack(pady=10)


def show_attacks_menu(content_frame):
    """Affiche le sous-menu des attaques."""
    for widget in content_frame.winfo_children():
        widget.destroy()

    title_label = ctk.CTkLabel(
        content_frame,
        text="Menu : Attaques",
        font=("Helvetica", 24, "bold"),
        text_color="white",
    )
    title_label.pack(pady=20)

    buttons = [
        ("Injection SQL", lambda: navigate_to_page(content_frame, show_sql_page)),
        ("Attaque XSS", lambda: navigate_to_page(content_frame, show_xss_page)),
        ("Attaque Brute Force", lambda: navigate_to_page(content_frame, show_brute_force_page)),
    ]

    for title, command in buttons:
        button = ctk.CTkButton(
            content_frame,
            text=title,
            command=command,
            fg_color="#2e2e2e",
            hover_color="#3e3e3e",
            corner_radius=10,
            font=("Helvetica", 14),
            height=40
        )
        button.pack(pady=10, padx=20, fill="x")

    back_button = ctk.CTkButton(
        content_frame,
        text="Retour",
        command=lambda: show_default_page(content_frame),
        fg_color="#D32F2F",
        hover_color="#C62828",
        corner_radius=10,
        font=("Helvetica", 14),
        height=40
    )
    back_button.pack(pady=10, padx=20, fill="x")


def show_tests_menu(content_frame):
    """Affiche le sous-menu des tests."""
    for widget in content_frame.winfo_children():
        widget.destroy()

    title_label = ctk.CTkLabel(
        content_frame,
        text="Menu : Tests",
        font=("Helvetica", 24, "bold"),
        text_color="white",
    )
    title_label.pack(pady=20)

    buttons = [
        ("Scanner Réseau", lambda: navigate_to_page(content_frame, show_nmap_page)),
        ("Tests Cryptographiques", lambda: navigate_to_page(content_frame, show_crypto_tests_page)),
        ("Contrôle des Autorisations", lambda: navigate_to_page(content_frame, show_access_control_page)),
    ]

    for title, command in buttons:
        button = ctk.CTkButton(
            content_frame,
            text=title,
            command=command,
            fg_color="#2e2e2e",
            hover_color="#3e3e3e",
            corner_radius=10,
            font=("Helvetica", 14),
            height=40
        )
        button.pack(pady=10, padx=20, fill="x")

    back_button = ctk.CTkButton(
        content_frame,
        text="Retour",
        command=lambda: show_default_page(content_frame),
        fg_color="#D32F2F",
        hover_color="#C62828",
        corner_radius=10,
        font=("Helvetica", 14),
        height=40
    )
    back_button.pack(pady=10, padx=20, fill="x")


def show_settings_menu(content_frame):
    """Affiche le menu des paramètres."""
    for widget in content_frame.winfo_children():
        widget.destroy()

    title_label = ctk.CTkLabel(
        content_frame,
        text="Menu : Paramètres",
        font=("Helvetica", 24, "bold"),
        text_color="white",
    )
    title_label.pack(pady=20)

    settings_button = ctk.CTkButton(
        content_frame,
        text="Ouvrir les Paramètres",
        command=lambda: navigate_to_page(content_frame, show_settings_page),
        fg_color="#2e2e2e",
        hover_color="#3e3e3e",
        corner_radius=10,
        font=("Helvetica", 14),
        height=40
    )
    settings_button.pack(pady=10, padx=20, fill="x")

    back_button = ctk.CTkButton(
        content_frame,
        text="Retour",
        command=lambda: show_default_page(content_frame),
        fg_color="#D32F2F",
        hover_color="#C62828",
        corner_radius=10,
        font=("Helvetica", 14),
        height=40
    )
    back_button.pack(pady=10, padx=20, fill="x")


def main_menu():
    """Affiche le menu principal avec navigation persistante."""
    global root
    root = ctk.CTk()
    root.title("KHRAL")

    # Dimensions de la fenêtre
    window_width, window_height = 1200, 800
    x_position = (root.winfo_screenwidth() - window_width) // 2
    y_position = (root.winfo_screenheight() - window_height) // 2
    root.geometry(f"{window_width}x{window_height}+{x_position}+{y_position}")
    root.configure(bg="#1e1e1e")

    # Bandeau supérieur
    top_frame = ctk.CTkFrame(root, fg_color="#2e2e2e", height=80)
    top_frame.pack(fill="x", side="top")

    # Conteneur principal
    main_frame = ctk.CTkFrame(root, fg_color="#1e1e1e")
    main_frame.pack(fill="both", expand=True)

    # Menu latéral
    menu_frame = ctk.CTkFrame(main_frame, fg_color="#2e2e2e", width=200)
    menu_frame.pack(side="left", fill="y", padx=10, pady=10)

    # Contenu dynamique
    content_frame = ctk.CTkFrame(main_frame, fg_color="#1e1e1e")
    content_frame.pack(side="right", expand=True, fill="both", padx=10, pady=10)

    features = [
        ("Attaques", lambda: show_attacks_menu(content_frame)),
        ("Tests", lambda: show_tests_menu(content_frame)),
        ("Paramètres", lambda: show_settings_menu(content_frame)),
    ]

    for title, command in features:
        button = ctk.CTkButton(
            menu_frame,
            text=title,
            command=command,
            fg_color="#2e2e2e",
            hover_color="#3e3e3e",
            corner_radius=10,
            font=("Helvetica", 14),
            height=40
        )
        button.pack(pady=10, padx=10, fill="x")

    # Bouton "Quitter"
    quit_button = ctk.CTkButton(
        menu_frame,
        text="Quitter",
        fg_color="#D32F2F",
        hover_color="#C62828",
        text_color="white",
        corner_radius=10,
        font=("Helvetica", 14),
        command=quit_application,
        height=40
    )
    quit_button.pack(side="bottom", pady=10, padx=10)

    show_default_page(content_frame)
    root.mainloop()


if __name__ == "__main__":
    main_menu()